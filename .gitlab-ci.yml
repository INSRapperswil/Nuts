default:
  image: python:3.7
  before_script:
    - echo ===== update pip =====
    - python -m pip install -U pip
    - echo ===== install tox =====
    - pip install tox

stages:
  - pytest
  - quality
  - sonar

variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip

pytest:
  stage: pytest
  script:
    - echo ===== create folder for artifacts =====
    - mkdir test-reports
    - tox -e py
  artifacts:
    when: always
    paths:
      - ./**/test-reports/*.xml
    reports:
      junit: 
      - ./**/test-reports/*.xml 

black:
  stage: quality
  image: python:3.7 
  script:
    - tox -e black

mypy:
  stage: quality
  script:
    - tox -e mypy

docs:
  stage: quality
  script:
    - tox -e docs    

pytest-main:
# run test using directly the pytest main branch  
  stage: pytest
  script:
    - echo ===== create folder for artifacts =====
    - mkdir test-reports
    - tox -e pytest-main
  artifacts:
    when: always
    paths:
      - ./**/test-reports/*.xml
    reports:
      junit: 
      - ./**/test-reports/*.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

sonar:
  image: sonarsource/sonar-scanner-cli
  stage: sonar
  before_script: []
  variables:
    SONAR_HOST_URL: $INS_SONAR_URL
    SONAR_LOGIN: $INS_SONAR_LOGIN
  script:
    - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.branch.name=$CI_BUILD_REF_NAME -Dsonar.python.coverage.reportPaths=test-reports/coverage.xml
  allow_failure: true
